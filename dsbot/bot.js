const Discord = require('discord.js');
const client = new Discord.Client();
const fs = require('fs');

const prefix = '+';

var users = JSON.parse(fs.readFileSync('D:/dsbot/users.json'));
console.log(users);

client.on('ready', () => {
  console.log('–ì–∞—Ç–æ–≤ –∫ —Ç—Ä—É–¥—É –∏ –æ–±–æ—Ä–æ–Ω–µ!!!!');
});

client.on('guildMemberAdd', member => {
    if (member.id in users.users) {
        
    }
    var obj = {
        id: member.id,
        username: member.username,
        dis_id: member.user.tag,
        lvl: 0,
        xp: 0
    };
    users.users.push(obj);
    fs.writeFileSync('D:/dsbot/users.json', JSON.stringify(users), null, 2);
    console.log(users);

    var hellochan = member.guild.channels.find(ch => ch.name === 'üè∑–∫–ø–ø');
    var helloembed = new Discord.RichEmbed;
    var answer = "{user} —É—Å—Ç–∞–Ω–æ–≤–∏–ª —Å–æ–µ–¥–∏–Ω–∏–µ —Å l0lo.server \n ./>>–≤—ã–∞—Ç—å \"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\" {user} \n  –≤—ã–¥–∞–Ω —Å—Ç–∞—Ç—É—Å \"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\" \n./>>–æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–≤–µ—Ç.txt \n   \`–ü—Ä–∏–≤–µ—Ç, –Ω–æ–≤–µ–Ω—å–∫–∏–π! –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–π –≤—Å–µ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ /–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞/–ø—Ä–∞–≤–∏–ª–∞.txt, –∞ –ø–æ—Ç–æ–º –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. –£–¥–∞—á–Ω–æ–≥–æ –æ—Å–≤–æ–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!\`";

    answer.replace('{user}', '<@' + member.id + '>');
    helloembed.addField('/–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞/—Å–∫—Ä—ã—Ç–æ–µ/–ø—Ä–∏–≤–µ—Ç-—Ä–æ–±–æ—Ç.js', answer);
    helloembed.setFooter(new Date());
    hellochan.send(helloembed);
});


client.on('message', message => {
    let args = message.content.substr(Object.keys(prefix).length).trim().split(' ');
    let cmd = args.shift().toLowerCase();
    if(message.author.bot) return;
    if(!message.content.startsWith(prefix)) return;
    try {
        let commandFile = require(`./coms/${cmd}.js`);
        commandFile.run(client, message, args, cmd);
    } catch(e) {
        console.log(e.stack);
        console.log('cmd: ' + cmd + ' args: ' + args);
    }
});

client.login('');
